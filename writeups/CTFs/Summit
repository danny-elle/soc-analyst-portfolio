# Summit CTF Writeup

**Platform:**  TryHackMe
**Category:**  CTF
**Difficulty:**  Easy
**Date Completed:**  2025-07-02


---

## Challenge Description

I participated in a purple-team engagement, acting as a Defensive Analyst during a 
simulated Metasploit attack conducted by an external penetration tester on a virtual
internal user workstation. My responsiblity was to configure and fine-tune PicoSecure's 
security tools to detect, alert on, and ultimately prevent malware executing. 

---

## Objective

Following the Pyramid of Pain framework, I focused on detecting and blocingk increasingly
sophisticated indicators of compromise (IOCs)- ranging from basic artifacts to advanced 
tactics, techniques, and procedures (TTPs). The primary goal was to  increase the adversary's
operational costs, forcing them to abandon their attack.

---

## Tools & Techniques

During the challenge, I used PicoSecure's full defensive toolset to detect, analyze, and respond
to malicious activity. PicoSecure's security toolset includes:

* Malware Analysis Sandbox - for behavioral analysis of malware samples and dynmaic detection
* Detect Hash Tool - to identify and flag known malicious files using has-based/digest detection (MD5, SHA1, SHA256)
* Firewall Rules - to block network-based activity from a specific IP address
* DNS Rules - to block network-based command-and-control activity from a specific domain address
* Sigma Rules - for creating custom detection rules based on a variety of Windows Sysmon specific features
* Mitre ATT&CK Mapping - to categorize and respond to attacker tactics, techniques, and procedures (TTPs)

---

## Step-by-Step Walkthrough

### sample1.exe 
   - **Initial Tool Used**: PicoSecure's Malware Analysis Sandbox  
   - **Indicators Extracted**: MD5, SHA1, SHA256
   - **Pyramid of Pain Level**: Hash (Trivial)
   - **Actions Taken**: Hash Blocklist Tool
   - **Caveats / Analyst Insights**: While can detect known malware quickly, they are weak indicators,
       because even a minor modification to the file changes the hash completely. 
  
 ### sample2.exe
    - **Initial Tool Used**: PicoSecure's Malware Analysis Sandbox
    - **Indicators Extracted**: 154.33.10.113
    - **Pyramid of Pain Level**: IP address (Easy)
    - **Actions Taken**: Firewall rule created to deny all outgoing (egress) traffic to 154.33.10.113
    - **Caveats / Analyst Insights**: Blocking IP addresses is a useful containment step, but attackers can 
         easily evade it by using dynamic IPs, fast-flux infastructure, proxy servers, or VPNs. 

 ### sample3.exe
    - **Initial Tool Used**: PicoSecure's Malware Analysis Sandbox
    - **Indicators Extracted**: emudyn.bresonicz.info
    - **Pyramid of Pain Level**: Domain Names (Simple)
    - **Actions Taken**: DNS rule created to deny emudyn.bresonicz.info and all its subdomains from the network
    - **Caveats / Analyst Insights**: Blocking DNS domains can temporarily disrupt attacker infastructure, but it has limited
        long-term effectiveness. Domains are easily rotated/regenerated using techniques like domain generation algorithms (DGAs).
        Threats like Snatch ransomware, noted by CISA, have been observed switching domains rapidly to evade blocks.
  
### sample4.exe
   - **Initial Tool Used**: PicoSecure's Malware Analysis Sandbox
   - **Indicators Extracted**: HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Windows Defender\Real-Time Protection,
                               DisableRealtimeMonitoring, 1
   - **Pyramid of Pain Level**: Host/Network Artifacts (Annoying)
   - **Actions Taken**: Developed a Sigma rule for Sysmon event logs to detect registry modifications by matching the specific registry key,
        name, and data, aligned with MITRE ATT&CK ID TA0005 - Defense Evasion.
   - **Caveats / Analyst Insights**: Attackers can bypass this detection by using alternate registry paths, renaming tools, or employing living-off-the-
        land techniques.


### sample5.exe
  - **Initial Tool Used**: PicoSecure's Malware Analysis Sandbox 
  - **Indicators Extracted**: outgoing_connections.log, source IP: 10.10.15.12 and destination IPs: 51.102.10.19, 43.10.65.115, size: 97 bytes, timestamps:
      2023-08-15 09:00:00, 2023-08-15 09:30:00
  - **Pyramid of Pain Level**: Tools (Challenging)
  - **Actions Taken**: Developed a Sigma rule for System event logs to detect network connections from any source to any destination with packet sizes of 97 
      bytes at 1800s intervals. Mapped to MITRE ATT&CK technique TA0011 - Command and Control (C2).
  - **Caveat / Analyst Insights**: Attackers are forced to adapt to the challenge of detecting and preventing their network tool. 
       Attackers may adapt by using encrypted channels (HTTPS, DNS tunneling), changing infastructure (C2 domains or IPs), or living-off-the land with built-in tools (curl, WMI, PowerShell)
       to blend in with normal traffic.

### sample6.exe
   - **Initial Tool Used**: PicoSecure's Malware Analysis Sandbox 
   - **Indicators Extracted**: commands.log, File Path: %temp%\exfiltr8.log
   - **Pyramid of Pain Level**: Tactics, Techniques, and Procedures (Tough!)
   - **Actions Taken**: Developed a Sigma rule for System event logs to detect file creation and modification
       in the %TEMP% directory matching the file name exfiltr8.log, aligned with MITRE ATT&CK ID TA0010 - Exfiltration.
   - **Caveat / Analyst Insights**: While TTP-level detection adds pressure on attackers, they can evade by altering file names, 
       using different staging directories (%APPDATA%), using encryption, or exfiltrating directly from memory. 

---

## Flags

  -**sample1.exe**:
  -**sample2.exe**:
  -**sample3.exe**:
  -**sample4.exe**:
  -**sample5.exe**:
  -**sample6.exe**:

---

## Lessons Learned

- **Hash-based blocking** is trivial to bypass; attackers can simply modify a single byte. It should be combined
     with behavioral indicators such as command-line arguments or network activity.
- **IP-based indicators** are volatile and easily evaded via proxies, dynamic IPs, or encrypted tunnels; they must be used alonside behavioral
    and domain-based blocking.
- **DNS-based indicators** are easily rotated and should be reinforced with host-based detections or network behavior analytics.
- ** Registry-based detections** such as modifications to Windows Defender's DisableRealtimeMonitoring, are effective but should be supported by telemetry like process monitoring
     and Windows Defender event logs. 
- **Network tool detection** adds friciton for attackers, but can be bypassed using encryption, legitimate utilities, or new C2 infastructure.
- **TTP-level detection** is powerful, but attackers may adapt through obfuscation, alternate data staging paths, or memory-only operations. Layered detection strategies including
    behavioral analysis and exfiltration monitoring are essential.

